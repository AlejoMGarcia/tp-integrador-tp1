// <auto-generated />
using System;
using MVCBasico.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCBasico.Migrations
{
    [DbContext(typeof(SubastaDatabaseContext))]
    [Migration("20210701001440_MVCBasico.Context.SubastaDatabaseContext")]
    partial class MVCBasicoContextSubastaDatabaseContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCBasico.Models.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioEnPuja")
                        .HasColumnType("float");

                    b.Property<double>("PrecioInicial")
                        .HasColumnType("float");

                    b.Property<double>("PrecioMinimo")
                        .HasColumnType("float");

                    b.Property<int?>("SubastaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubastaId");

                    b.ToTable("Articulo");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Articulo");
                });

            modelBuilder.Entity("MVCBasico.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<int?>("SubastaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("SubastaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Compra");
                });

            modelBuilder.Entity("MVCBasico.Models.Subasta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Subastas");
                });

            modelBuilder.Entity("MVCBasico.Models.Telefono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoTelefono")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("MVCBasico.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Apodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CBU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNaciemiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("MVCBasico.Models.ArticuloArte", b =>
                {
                    b.HasBaseType("MVCBasico.Models.Articulo");

                    b.Property<string>("Artista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoArte")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("ArticuloArte");
                });

            modelBuilder.Entity("MVCBasico.Models.ArticuloMueble", b =>
                {
                    b.HasBaseType("MVCBasico.Models.Articulo");

                    b.Property<double>("Alto")
                        .HasColumnType("float");

                    b.Property<double>("Ancho")
                        .HasColumnType("float");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ArticuloMueble");
                });

            modelBuilder.Entity("MVCBasico.Models.Articulo", b =>
                {
                    b.HasOne("MVCBasico.Models.Subasta", null)
                        .WithMany("ArticulosSubastados")
                        .HasForeignKey("SubastaId");
                });

            modelBuilder.Entity("MVCBasico.Models.Compra", b =>
                {
                    b.HasOne("MVCBasico.Models.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId");

                    b.HasOne("MVCBasico.Models.Subasta", "Subasta")
                        .WithMany()
                        .HasForeignKey("SubastaId");

                    b.HasOne("MVCBasico.Models.Usuario", null)
                        .WithMany("Compras")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("MVCBasico.Models.Subasta", b =>
                {
                    b.HasOne("MVCBasico.Models.Usuario", null)
                        .WithMany("Subastas")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("MVCBasico.Models.Telefono", b =>
                {
                    b.HasOne("MVCBasico.Models.Usuario", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
